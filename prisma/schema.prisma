generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Priority {
  LOW
  MEDIUM
  HIGH
}

enum Status {
  TODO
  IN_PROGRESS
  COMPLETED
}

model User {
  id        String @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  username  String @unique @map("username") @db.VarChar(32)
  email     String @unique @map("email") @db.VarChar(32)
  password  String @map("password") 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  tasks     Task[]
  categories Category[]

  @@id([id])
  @@map("user")
}

model Category {
  id        String @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name      String @map("name") @db.VarChar(255)
  userId    String @map("userId") @db.Uuid
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  user      User     @relation(fields: [userId], references: [id])
  tasks     Task[]

  @@id([id])
  @@map("category")
}

model Task {
  id          String @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  title       String @map("title") @db.VarChar(255)
  description String @map("description") @db.Text
  photo       String? @map("photo")
  dueDate     DateTime @map("dueDate")
  priority    Priority @map("priority")
  status      Status @map("status")
  categoryId  String? @map("categoryId") @db.Uuid
  userId      String @map("userId") @db.Uuid
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  
  category    Category? @relation(fields: [categoryId], references: [id])
  user        User      @relation(fields: [userId], references: [id])

  @@id([id])
  @@map("task")
}